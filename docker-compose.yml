version: '3.8'

services:
  # Wine Quality Prediction API
  wine-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wine-quality-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/src
      - PORT=8000
      - ENV=production
    volumes:
      # Mount data directory for persistence
      - ./data:/app/data:ro
      # Mount outputs for model persistence
      - wine_models:/app/outputs/models
      - wine_plots:/app/outputs/plots
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - wine-network

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: wine-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - wine-api
    restart: unless-stopped
    networks:
      - wine-network
    profiles:
      - production

  # Optional: PostgreSQL for logging and analytics
  postgres:
    image: postgres:13-alpine
    container_name: wine-postgres
    environment:
      POSTGRES_DB: wine_analytics
      POSTGRES_USER: wine_user
      POSTGRES_PASSWORD: wine_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - wine-network
    profiles:
      - analytics

  # Optional: Redis for caching
  redis:
    image: redis:6-alpine
    container_name: wine-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - wine-network
    profiles:
      - caching

# Named volumes for data persistence
volumes:
  wine_models:
    name: wine_models
  wine_plots:
    name: wine_plots
  postgres_data:
    name: postgres_data
  redis_data:
    name: redis_data

# Custom network
networks:
  wine-network:
    name: wine-network
    driver: bridge